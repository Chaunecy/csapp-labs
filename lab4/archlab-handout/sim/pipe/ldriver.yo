                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f67803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f76801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2fdffffffffffffff | 	iaddq $-3, %rdx     # limit = len - stride + 1
0x03e: 70f500000000000000   | 	jmp Test
0x047:                      | Loop:
0x047: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x051: 200b                 | 	rrmovq %rax, %r11
0x053: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x05d: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x067: 62aa                 | 	andq %r10, %r10
0x069: 26b0                 | 	cmovg %r11, %rax
                            | 	# iaddq $0x8, %rdi
                            | 	# iaddq $0x8, %rsi
                            | 	
0x06b: 50a70800000000000000 | 	mrmovq 0x8(%rdi), %r10
0x075: 200b                 | 	rrmovq %rax, %r11
0x077: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x081: 40a60800000000000000 | 	rmmovq %r10, 0x8(%rsi)
0x08b: 62aa                 | 	andq %r10, %r10
0x08d: 26b0                 | 	cmovg %r11, %rax
                            | 	# iaddq $0x8, %rdi
                            | 	# iaddq $0x8, %rsi
                            | 
0x08f: 50a71000000000000000 | 	mrmovq 0x10(%rdi), %r10
0x099: 200b                 | 	rrmovq %rax, %r11
0x09b: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x0a5: 40a61000000000000000 | 	rmmovq %r10, 0x10(%rsi)
0x0af: 62aa                 | 	andq %r10, %r10
0x0b1: 26b0                 | 	cmovg %r11, %rax
                            | 	# iaddq $0x8, %rdi
                            | 	# iaddq $0x8, %rsi
                            | 	
0x0b3: 50a71800000000000000 | 	mrmovq 0x18(%rdi), %r10
0x0bd: 200b                 | 	rrmovq %rax, %r11
0x0bf: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x0c9: 40a61800000000000000 | 	rmmovq %r10, 0x18(%rsi)
0x0d3: 62aa                 | 	andq %r10, %r10
0x0d5: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x0d7: c0f72000000000000000 | 	iaddq $0x20, %rdi
0x0e1: c0f62000000000000000 | 	iaddq $0x20, %rsi
                            | 	
0x0eb: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x0f5:                      | Test:
0x0f5: 764700000000000000   | 	jg Loop			# if so, goto Loop:
                            | 
0x0fe: c0f20300000000000000 | 	iaddq $0x3, %rdx
0x108: 741a01000000000000   | 	jne Last
0x111: 706501000000000000   | 	jmp Done
0x11a:                      | Last:
0x11a: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x124: 200b                 | 	rrmovq %rax, %r11
0x126: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x130: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x13a: 62aa                 | 	andq %r10, %r10
0x13c: 26b0                 | 	cmovg %r11, %rax
0x13e: c0f70800000000000000 | 	iaddq $0x8, %rdi
0x148: c0f60800000000000000 | 	iaddq $0x8, %rsi
0x152: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x15c: 761a01000000000000   | 	jg Last
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x165:                      | Done:
0x165: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x166:                      | End:
                            | #/* $end ncopy-ys */
0x166:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x168:                      | 	.align 8
0x168:                      | src:
0x168: 0100000000000000     | 	.quad 1
0x170: 0200000000000000     | 	.quad 2
0x178: fdffffffffffffff     | 	.quad -3
0x180: fcffffffffffffff     | 	.quad -4
0x188: 0500000000000000     | 	.quad 5
0x190: faffffffffffffff     | 	.quad -6
0x198: 0700000000000000     | 	.quad 7
0x1a0: f8ffffffffffffff     | 	.quad -8
0x1a8: f7ffffffffffffff     | 	.quad -9
0x1b0: f6ffffffffffffff     | 	.quad -10
0x1b8: f5ffffffffffffff     | 	.quad -11
0x1c0: 0c00000000000000     | 	.quad 12
0x1c8: f3ffffffffffffff     | 	.quad -13
0x1d0: 0e00000000000000     | 	.quad 14
0x1d8: 0f00000000000000     | 	.quad 15
0x1e0: f0ffffffffffffff     | 	.quad -16
0x1e8: 1100000000000000     | 	.quad 17
0x1f0: eeffffffffffffff     | 	.quad -18
0x1f8: 1300000000000000     | 	.quad 19
0x200: ecffffffffffffff     | 	.quad -20
0x208: ebffffffffffffff     | 	.quad -21
0x210: 1600000000000000     | 	.quad 22
0x218: e9ffffffffffffff     | 	.quad -23
0x220: e8ffffffffffffff     | 	.quad -24
0x228: 1900000000000000     | 	.quad 25
0x230: 1a00000000000000     | 	.quad 26
0x238: e5ffffffffffffff     | 	.quad -27
0x240: e4ffffffffffffff     | 	.quad -28
0x248: 1d00000000000000     | 	.quad 29
0x250: e2ffffffffffffff     | 	.quad -30
0x258: 1f00000000000000     | 	.quad 31
0x260: e0ffffffffffffff     | 	.quad -32
0x268: dfffffffffffffff     | 	.quad -33
0x270: 2200000000000000     | 	.quad 34
0x278: 2300000000000000     | 	.quad 35
0x280: dcffffffffffffff     | 	.quad -36
0x288: 2500000000000000     | 	.quad 37
0x290: daffffffffffffff     | 	.quad -38
0x298: 2700000000000000     | 	.quad 39
0x2a0: 2800000000000000     | 	.quad 40
0x2a8: 2900000000000000     | 	.quad 41
0x2b0: d6ffffffffffffff     | 	.quad -42
0x2b8: 2b00000000000000     | 	.quad 43
0x2c0: d4ffffffffffffff     | 	.quad -44
0x2c8: 2d00000000000000     | 	.quad 45
0x2d0: 2e00000000000000     | 	.quad 46
0x2d8: 2f00000000000000     | 	.quad 47
0x2e0: 3000000000000000     | 	.quad 48
0x2e8: cfffffffffffffff     | 	.quad -49
0x2f0: ceffffffffffffff     | 	.quad -50
0x2f8: cdffffffffffffff     | 	.quad -51
0x300: 3400000000000000     | 	.quad 52
0x308: 3500000000000000     | 	.quad 53
0x310: caffffffffffffff     | 	.quad -54
0x318: c9ffffffffffffff     | 	.quad -55
0x320: c8ffffffffffffff     | 	.quad -56
0x328: 3900000000000000     | 	.quad 57
0x330: 3a00000000000000     | 	.quad 58
0x338: c5ffffffffffffff     | 	.quad -59
0x340: c4ffffffffffffff     | 	.quad -60
0x348: 3d00000000000000     | 	.quad 61
0x350: c2ffffffffffffff     | 	.quad -62
0x358: 3f00000000000000     | 	.quad 63
0x360: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x370:                      | 	.align 16
0x370:                      | Predest:
0x370: fadebc0000000000     | 	.quad 0xbcdefa
0x378:                      | dest:
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570:                      | Postdest:
0x570: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x578:                      | .align 8
                            | # Run time stack
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
0x5a8: 0000000000000000     | 	.quad 0
0x5b0: 0000000000000000     | 	.quad 0
0x5b8: 0000000000000000     | 	.quad 0
0x5c0: 0000000000000000     | 	.quad 0
0x5c8: 0000000000000000     | 	.quad 0
0x5d0: 0000000000000000     | 	.quad 0
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
                            | 
0x5f8:                      | Stack:
