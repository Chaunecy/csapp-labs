                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a807000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71803000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2ffffffffffffffff | 	iaddq $-1, %rdx     # 對 len = 1 的優化
0x03e: 747200000000000000   | 	jne More
0x047: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x051: 30fb0100000000000000 | 	irmovq $1, %r11
0x05b: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x065: 62aa                 | 	andq %r10, %r10
0x067: 26b0                 | 	cmovg %r11, %rax
0x069: 701003000000000000   | 	jmp Done
0x072:                      | More:                   # 對不等於 1 的
0x072: c0f2faffffffffffffff | 	iaddq $-6, %rdx     # 一個副作用，小於 7 的直接進入 Last
0x07c: 76c001000000000000   | 	jg Loop
0x085:                      | ForLessThan7:
0x085: c0f20300000000000000 | 	iaddq $0x3, %rdx
0x08f: 750801000000000000   | 	jge Last
0x098: c0f20400000000000000 | 	iaddq $0x4, %rdx
0x0a2: 74b400000000000000   | 	jne Fin
0x0ab: 701003000000000000   | 	jmp Done
0x0b4:                      | Fin:                    # 剩下的不到 4 個
0x0b4: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x0be: 200b                 | 	rrmovq %rax, %r11
0x0c0: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x0ca: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x0d4: 62aa                 | 	andq %r10, %r10
0x0d6: 26b0                 | 	cmovg %r11, %rax
0x0d8: c0f70800000000000000 | 	iaddq $0x8, %rdi
0x0e2: c0f60800000000000000 | 	iaddq $0x8, %rsi
0x0ec: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x0f6: 76b400000000000000   | 	jg Fin
0x0ff: 701003000000000000   | 	jmp Done
0x108:                      | Last:                    # 剩下的有 4 個及以上
0x108: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x112: 200b                 | 	rrmovq %rax, %r11
0x114: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x11e: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x128: 62aa                 | 	andq %r10, %r10
0x12a: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x12c: 50a70800000000000000 | 	mrmovq 0x8(%rdi), %r10
0x136: 200b                 | 	rrmovq %rax, %r11
0x138: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x142: 40a60800000000000000 | 	rmmovq %r10, 0x8(%rsi)
0x14c: 62aa                 | 	andq %r10, %r10
0x14e: 26b0                 | 	cmovg %r11, %rax
                            | 
0x150: 50a71000000000000000 | 	mrmovq 0x10(%rdi), %r10
0x15a: 200b                 | 	rrmovq %rax, %r11
0x15c: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x166: 40a61000000000000000 | 	rmmovq %r10, 0x10(%rsi)
0x170: 62aa                 | 	andq %r10, %r10
0x172: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x174: 50a71800000000000000 | 	mrmovq 0x18(%rdi), %r10
0x17e: 200b                 | 	rrmovq %rax, %r11
0x180: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x18a: 40a61800000000000000 | 	rmmovq %r10, 0x18(%rsi)
0x194: 62aa                 | 	andq %r10, %r10
0x196: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x198: c0f72000000000000000 | 	iaddq $0x20, %rdi
0x1a2: c0f62000000000000000 | 	iaddq $0x20, %rsi
0x1ac: 6222                 | 	andq %rdx, %rdx
0x1ae: 76b400000000000000   | 	jg Fin
0x1b7: 701003000000000000   | 	jmp Done
0x1c0:                      | Loop:                   # 大於 7 個
0x1c0: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x1ca: 200b                 | 	rrmovq %rax, %r11
0x1cc: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x1d6: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1e0: 62aa                 | 	andq %r10, %r10
0x1e2: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x1e4: 50a70800000000000000 | 	mrmovq 0x8(%rdi), %r10
0x1ee: 200b                 | 	rrmovq %rax, %r11
0x1f0: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x1fa: 40a60800000000000000 | 	rmmovq %r10, 0x8(%rsi)
0x204: 62aa                 | 	andq %r10, %r10
0x206: 26b0                 | 	cmovg %r11, %rax
                            | 
0x208: 50a71000000000000000 | 	mrmovq 0x10(%rdi), %r10
0x212: 200b                 | 	rrmovq %rax, %r11
0x214: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x21e: 40a61000000000000000 | 	rmmovq %r10, 0x10(%rsi)
0x228: 62aa                 | 	andq %r10, %r10
0x22a: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x22c: 50a71800000000000000 | 	mrmovq 0x18(%rdi), %r10
0x236: 200b                 | 	rrmovq %rax, %r11
0x238: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x242: 40a61800000000000000 | 	rmmovq %r10, 0x18(%rsi)
0x24c: 62aa                 | 	andq %r10, %r10
0x24e: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x250: 50a72000000000000000 | 	mrmovq 0x20(%rdi), %r10
0x25a: 200b                 | 	rrmovq %rax, %r11
0x25c: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x266: 40a62000000000000000 | 	rmmovq %r10, 0x20(%rsi)
0x270: 62aa                 | 	andq %r10, %r10
0x272: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x274: 50a72800000000000000 | 	mrmovq 0x28(%rdi), %r10
0x27e: 200b                 | 	rrmovq %rax, %r11
0x280: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x28a: 40a62800000000000000 | 	rmmovq %r10, 0x28(%rsi)
0x294: 62aa                 | 	andq %r10, %r10
0x296: 26b0                 | 	cmovg %r11, %rax
                            | 
0x298: 50a73000000000000000 | 	mrmovq 0x30(%rdi), %r10
0x2a2: 200b                 | 	rrmovq %rax, %r11
0x2a4: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x2ae: 40a63000000000000000 | 	rmmovq %r10, 0x30(%rsi)
0x2b8: 62aa                 | 	andq %r10, %r10
0x2ba: 26b0                 | 	cmovg %r11, %rax
                            | 	
0x2bc: 50a73800000000000000 | 	mrmovq 0x38(%rdi), %r10
0x2c6: 200b                 | 	rrmovq %rax, %r11
0x2c8: c0fb0100000000000000 | 	iaddq $0x1, %r11
0x2d2: 40a63800000000000000 | 	rmmovq %r10, 0x38(%rsi)
0x2dc: 62aa                 | 	andq %r10, %r10
0x2de: 26b0                 | 	cmovg %r11, %rax
0x2e0: c0f74000000000000000 | 	iaddq $0x40, %rdi
0x2ea: c0f64000000000000000 | 	iaddq $0x40, %rsi
                            | 	
0x2f4: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x2fe:                      | Test:
0x2fe: 76c001000000000000   | 	jg Loop			# if so, goto Loop:
0x307: 708500000000000000   | 	jmp ForLessThan7
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x310:                      | Done:
0x310: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x311:                      | End:
                            | #/* $end ncopy-ys */
0x311:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x318:                      | 	.align 8
0x318:                      | src:
0x318: 0100000000000000     | 	.quad 1
0x320: feffffffffffffff     | 	.quad -2
0x328: fdffffffffffffff     | 	.quad -3
0x330: 0400000000000000     | 	.quad 4
0x338: 0500000000000000     | 	.quad 5
0x340: 0600000000000000     | 	.quad 6
0x348: 0700000000000000     | 	.quad 7
0x350: 0800000000000000     | 	.quad 8
0x358: 0900000000000000     | 	.quad 9
0x360: 0a00000000000000     | 	.quad 10
0x368: 0b00000000000000     | 	.quad 11
0x370: f4ffffffffffffff     | 	.quad -12
0x378: f3ffffffffffffff     | 	.quad -13
0x380: f2ffffffffffffff     | 	.quad -14
0x388: f1ffffffffffffff     | 	.quad -15
0x390: f0ffffffffffffff     | 	.quad -16
0x398: efffffffffffffff     | 	.quad -17
0x3a0: eeffffffffffffff     | 	.quad -18
0x3a8: 1300000000000000     | 	.quad 19
0x3b0: 1400000000000000     | 	.quad 20
0x3b8: 1500000000000000     | 	.quad 21
0x3c0: eaffffffffffffff     | 	.quad -22
0x3c8: 1700000000000000     | 	.quad 23
0x3d0: e8ffffffffffffff     | 	.quad -24
0x3d8: e7ffffffffffffff     | 	.quad -25
0x3e0: e6ffffffffffffff     | 	.quad -26
0x3e8: e5ffffffffffffff     | 	.quad -27
0x3f0: e4ffffffffffffff     | 	.quad -28
0x3f8: e3ffffffffffffff     | 	.quad -29
0x400: 1e00000000000000     | 	.quad 30
0x408: 1f00000000000000     | 	.quad 31
0x410: 2000000000000000     | 	.quad 32
0x418: dfffffffffffffff     | 	.quad -33
0x420: deffffffffffffff     | 	.quad -34
0x428: 2300000000000000     | 	.quad 35
0x430: 2400000000000000     | 	.quad 36
0x438: dbffffffffffffff     | 	.quad -37
0x440: daffffffffffffff     | 	.quad -38
0x448: d9ffffffffffffff     | 	.quad -39
0x450: d8ffffffffffffff     | 	.quad -40
0x458: 2900000000000000     | 	.quad 41
0x460: d6ffffffffffffff     | 	.quad -42
0x468: d5ffffffffffffff     | 	.quad -43
0x470: d4ffffffffffffff     | 	.quad -44
0x478: d3ffffffffffffff     | 	.quad -45
0x480: d2ffffffffffffff     | 	.quad -46
0x488: d1ffffffffffffff     | 	.quad -47
0x490: 3000000000000000     | 	.quad 48
0x498: 3100000000000000     | 	.quad 49
0x4a0: 3200000000000000     | 	.quad 50
0x4a8: cdffffffffffffff     | 	.quad -51
0x4b0: ccffffffffffffff     | 	.quad -52
0x4b8: 3500000000000000     | 	.quad 53
0x4c0: caffffffffffffff     | 	.quad -54
0x4c8: 3700000000000000     | 	.quad 55
0x4d0: 3800000000000000     | 	.quad 56
0x4d8: 3900000000000000     | 	.quad 57
0x4e0: c6ffffffffffffff     | 	.quad -58
0x4e8: 3b00000000000000     | 	.quad 59
0x4f0: 3c00000000000000     | 	.quad 60
0x4f8: 3d00000000000000     | 	.quad 61
0x500: 3e00000000000000     | 	.quad 62
0x508: 3f00000000000000     | 	.quad 63
0x510: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x520:                      | 	.align 16
0x520:                      | Predest:
0x520: fadebc0000000000     | 	.quad 0xbcdefa
0x528:                      | dest:
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720:                      | Postdest:
0x720: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x728:                      | .align 8
                            | # Run time stack
0x728: 0000000000000000     | 	.quad 0
0x730: 0000000000000000     | 	.quad 0
0x738: 0000000000000000     | 	.quad 0
0x740: 0000000000000000     | 	.quad 0
0x748: 0000000000000000     | 	.quad 0
0x750: 0000000000000000     | 	.quad 0
0x758: 0000000000000000     | 	.quad 0
0x760: 0000000000000000     | 	.quad 0
0x768: 0000000000000000     | 	.quad 0
0x770: 0000000000000000     | 	.quad 0
0x778: 0000000000000000     | 	.quad 0
0x780: 0000000000000000     | 	.quad 0
0x788: 0000000000000000     | 	.quad 0
0x790: 0000000000000000     | 	.quad 0
0x798: 0000000000000000     | 	.quad 0
0x7a0: 0000000000000000     | 	.quad 0
                            | 
0x7a8:                      | Stack:
