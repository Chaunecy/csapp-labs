#######################################################################
# Test for copying block of size 4;
#######################################################################
	.pos 0
main:	irmovq Stack, %rsp  	# Set up stack pointer

	# Set up arguments for copy function and then invoke it
	irmovq $4, %rdx		# src and dst have 4 elements
	irmovq dest, %rsi	# dst array
	irmovq src, %rdi	# src array
	call ncopy		 
	halt			# should halt with num nonzeros in %rax
StartFun:
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-3, %rdx     # limit = len - stride + 1
	jmp Test
Loop:
	mrmovq (%rdi), %r10
	rrmovq %rax, %r11
	iaddq $0x1, %r11
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	cmovg %r11, %rax
	# iaddq $0x8, %rdi
	# iaddq $0x8, %rsi
	
	mrmovq 0x8(%rdi), %r10
	rrmovq %rax, %r11
	iaddq $0x1, %r11
	rmmovq %r10, 0x8(%rsi)
	andq %r10, %r10
	cmovg %r11, %rax
	# iaddq $0x8, %rdi
	# iaddq $0x8, %rsi

	mrmovq 0x10(%rdi), %r10
	rrmovq %rax, %r11
	iaddq $0x1, %r11
	rmmovq %r10, 0x10(%rsi)
	andq %r10, %r10
	cmovg %r11, %rax
	# iaddq $0x8, %rdi
	# iaddq $0x8, %rsi
	
	mrmovq 0x18(%rdi), %r10
	rrmovq %rax, %r11
	iaddq $0x1, %r11
	rmmovq %r10, 0x18(%rsi)
	andq %r10, %r10
	cmovg %r11, %rax
	
	iaddq $0x20, %rdi
	iaddq $0x20, %rsi
	
	iaddq $-4, %rdx
Test:
	jg Loop			# if so, goto Loop:

	iaddq $0x3, %rdx
	jne Last
	jmp Done
Last:
	mrmovq (%rdi), %r10
	rrmovq %rax, %r11
	iaddq $0x1, %r11
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	cmovg %r11, %rax
	iaddq $0x8, %rdi
	iaddq $0x8, %rsi
	iaddq $-1, %rdx
	jg Last
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
EndFun:

###############################
# Source and destination blocks 
###############################
	.align 8
src:
	.quad 1
	.quad -2
	.quad -3
	.quad 4
	.quad 0xbcdefa # This shouldn't get moved

	.align 16
Predest:
	.quad 0xbcdefa
dest:
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
Postdest:
	.quad 0xdefabc

.align 8
# Run time stack
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0

Stack:
